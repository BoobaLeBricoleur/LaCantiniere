#
# Will start all docker constructions with MySQL
#
# Java img construction is controlled by Dockerfile
# Spring boot options are given at line ~31
#
# Password and network ports are handled in .env file
#
version: "3.9"
name: stone-lunchtime-for-mysql
services:
  # https://hub.docker.com/_/mysql
  mysqldbsl:
    image: mysql:8.2.0
    container_name: mysqldbsl
    hostname: mysqldbsl
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$DB_ROOT_PASSWORD
      - MYSQL_DATABASE=$DB_DATABASE
      - MYSQL_USER=$DB_USER
      - MYSQL_PASSWORD=$DB_USER_PASSWORD
      - MYSQL_ALLOW_EMPTY_PASSWORD=no
    # Use ports if you want to connect to Data base from outside the container
    ports:
      - $DB_LOCAL_PORT:$DB_DOCKER_PORT
    # No access from OUTSIDE the containers, use expose
    # expose:
    #  - $DB_DOCKER_PORT
    
    # Give access from OUTSIDE to the containers
    # Use this instead if you want to connect to Data base
    # ports:
    #  - $DB_LOCAL_PORT:$DB_DOCKER_PORT
    # We have two volumes
    # one file=bind: the dump of the db. This should prevail docker to
    #                mount a file 'as' a directory
    # one volume=volume: where to keep datas. It is a directory
    volumes:
      - type: bind
        source: ./dump/insert.sql
        target: /docker-entrypoint-initdb.d/insert.sql
        read_only: true
      - type: volume
        source: vol_mysql_db_sl
        target: /var/lib/mysql

  # https://hub.docker.com/_/phpmyadmin
  phpmyadminsl:
    image: phpmyadmin:latest
    container_name: phpmyadminsl
    hostname: phpmyadminsl
    depends_on:
      - mysqldbsl
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $PMA_LOCAL_PORT:$PMA_DOCKER_PORT
    environment:
      - PMA_HOST=mysqldbsl
      - PMA_PORT=$DB_DOCKER_PORT
      - PMA_USER=root
      - PMA_PASSWORD=$DB_ROOT_PASSWORD
      - PMA_ARBITRARY=1

  # Application Java
  javaappmysqlsl:
    container_name: javaappmysqlsl
    hostname: javaappmysqlsl
    depends_on:
      - mysqldbsl
    build: 
      context: ../../../stone.lunchtime
      dockerfile: Dockerfile
      args:
        - USE_MAVEN_PROFILE=${USE_MAVEN_PROFILE}
    restart: unless-stopped
    env_file: ./.env

    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
      - $SPRING_LOCAL_PORT_SSL:$SPRING_DOCKER_PORT_SSL

    environment:
      # Sets with "spring.profiles.active" : "${USE_MAVEN_PROFILE},unsecured,ssl,actuator" if you want
      - SPRING_APPLICATION_JSON={"spring.profiles.active":"${USE_MAVEN_PROFILE},actuator","spring.datasource.url":"jdbc:mysql://mysqldbsl:$DB_DOCKER_PORT/$DB_DATABASE?useSSL=false&serverTimezone=Europe/Paris&allowPublicKeyRetrieval=true","spring.datasource.username":"$DB_USER","spring.datasource.password":"$DB_USER_PASSWORD","spring.server.port":"$SPRING_DOCKER_PORT"}
    volumes:
      - ../.m2:/root/.m2
    stdin_open: true
    tty: true

  # Prometheus for monitoring
  # https://hub.docker.com/r/prom/prometheus
  prometheusmysqlsl:
    image: prom/prometheus:latest
    container_name: prometheusmysqlsl
    hostname: prometheusmysqlsl
    env_file: ./.env
    restart: unless-stopped  
    depends_on:
      - javaappmysqlsl
    ports:
      - $PROM_LOCAL_PORT:$PROM_DOCKER_PORT
            
    volumes:
      - type: bind
        source: ./prometheus.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true
      - type: volume
        source: vol_pt_data_mysql_db_sl
        target: /etc/prometheus/data

volumes:
  vol_mysql_db_sl:
  vol_pt_data_mysql_db_sl:

#
# Run all  : docker-compose up --build
# Stop all : docker-compose down
# Stop all and delte all img : docker-compose down --rmi all
#