#
# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#

# Made by http://patorjk.com/software/taag/#p=display&f=Colossal&t=Lunch%20Time%20Project
spring.banner.location=classpath:banner.txt
spring.banner.charset=UTF-8
spring.application.name=stone.lunchtime

#
# Log
#
logging.file.name=stone.log
logging.level.root=warn
logging.level.stone.lunchtime=debug
logging.pattern.dateformat=dd/MM/yyyy HH:mm:ss
logging.charset.console=UTF-8
logging.pattern.file=${logging.pattern.console}
logging.charset.file=${logging.charset.console}

spring.output.ansi.enabled=detect

# Default profile set to h2
# Can also be
# spring.profiles.active=mysql
# spring.profiles.active=postgresql
# spring.profiles.active=sqlserver
# You can add unsecured if you do not want to authenticate yourself
# unsecured: means that you are always login as lunchlady
# spring.profiles.active=mysql,unsecured
# ssl: means you want HTTP'S', server port will be 8443 instead of 8080
# actuator: will use the metrics survey. You can access it using prometheus or simple URL call
# spring.profiles.active=mysql,actuator,unsecured,ssl
#

spring.profiles.active=h2



# Specific to application
configuration.allow.sendmail=false
# Date format for input
configuration.date.pattern=yyyy-MM-dd
configuration.forgot.password.email.body=Bonjour,<br/>voici votre nouveau mot de passe : {0}<br/>Cordialement,<br/>Equipe Cantiniere.
configuration.forgot.password.email.subject=[Cantiniere] - Mot de passe

#
# JWT - Token
#
# Expire time in ms, 86400000 = One day
configuration.jwt.expire.in.ms=86400000

# Possible value : none,HS256,HS384,HS512,RS256,RS384,RS512,ES256,ES384,ES512,PS256,PS384,PS512
# HS512 or HS256 are the most common
# This will impact the client JS
configuration.jwt.signature.algorithm=HS512

# If you choose a signature algorithm that is not none
# Use http://www.allkeysgenerator.com/ for your key generation 
# This a HS512 value sample :
configuration.jwt.key=-KaPdSgVkXp2s5v8y/B?E(H+MbQeThWmZq3t6w9z$C&F)J@NcRfUjXn2r5u7x!A%


# Root URL
server.servlet.context-path=/stone.lunchtime
server.servlet.application-display-name=Lunch Time
server.port=8080
spring.main.web-application-type=SERVLET

# Default values for Graph-IDE-QL
spring.graphql.graphiql.enabled=true
graphql.servlet.exception-handlers-enabled=true
# spring.graphql.graphiql.path=/graphiql
# graphql.playground.mapping=/playground
graphql.playground.enabled=false
graphql.servlet.cors-enabled=false
graphql.altair.enabled=true
graphql.altair.cdn.enabled=true
# graphql.altair.static.base-path=${server.servlet.context-path}
graphql.altair.options.endpoint-url=${server.servlet.context-path}/graphql


# Email
# https://www.baeldung.com/spring-email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
# Your Gmail login
spring.mail.username=MyGmailLogin
# Best to use app password here: https://productforums.google.com/forum/#!msg/gmail/8Z2O_qx6Lck/L7sMqEJqFQAJ
spring.mail.password=MyGmailPwd
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Handle LAZY fetch for use
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
# Keep database column name
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# If you want to see SQL request
# spring.jpa.show-sql=true

# Database global behavior
spring.jpa.generate-ddl=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.ddl-auto=none
spring.sql.init.mode=never

#
# SSL
#
server.ssl.enabled=false
# Activate ssl profile in order to start in https
# with self-signed certificate
